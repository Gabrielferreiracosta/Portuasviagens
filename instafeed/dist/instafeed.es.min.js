/* instafeed.js | v2.0.0 | https://github.com/stevenschobert/instafeed.js | License: MIT */
function assert(e,t){if(!e)throw new Error(t)}function Instafeed(e){assert(!e||"object"==typeof e,"options must be an object, got "+e+" ("+typeof e+")");var t={accessToken:null,accessTokenTimeout:1e4,after:null,apiTimeout:1e4,apiLimit:null,before:null,debug:!1,error:null,filter:null,limit:null,mock:!1,render:null,sort:null,success:null,target:"instafeed",template:'<a href="{{link}}"><img title="{{caption}}" src="{{image}}" /></a>',templateBoundaries:["{{","}}"],transform:null};if(e)for(var o in t)"undefined"!=typeof e[o]&&(t[o]=e[o]);assert("string"==typeof t.target||"object"==typeof t.target,"target must be a string or DOM node, got "+t.target+" ("+typeof t.target+")"),assert("string"==typeof t.accessToken||"function"==typeof t.accessToken,"accessToken must be a string or function, got "+t.accessToken+" ("+typeof t.accessToken+")"),assert("number"==typeof t.accessTokenTimeout,"accessTokenTimeout must be a number, got "+t.accessTokenTimeout+" ("+typeof t.accessTokenTimeout+")"),assert("number"==typeof t.apiTimeout,"apiTimeout must be a number, got "+t.apiTimeout+" ("+typeof t.apiTimeout+")"),assert("boolean"==typeof t.debug,"debug must be true or false, got "+t.debug+" ("+typeof t.debug+")"),assert("boolean"==typeof t.mock,"mock must be true or false, got "+t.mock+" ("+typeof t.mock+")"),assert("object"==typeof t.templateBoundaries&&2===t.templateBoundaries.length&&"string"==typeof t.templateBoundaries[0]&&"string"==typeof t.templateBoundaries[1],"templateBoundaries must be an array of 2 strings, got "+t.templateBoundaries+" ("+typeof t.templateBoundaries+")"),assert(!t.template||"string"==typeof t.template,"template must null or string, got "+t.template+" ("+typeof t.template+")"),assert(!t.error||"function"==typeof t.error,"error must be null or function, got "+t.error+" ("+typeof t.error+")"),assert(!t.before||"function"==typeof t.before,"before must be null or function, got "+t.before+" ("+typeof t.before+")"),assert(!t.after||"function"==typeof t.after,"after must be null or function, got "+t.after+" ("+typeof t.after+")"),assert(!t.success||"function"==typeof t.success,"success must be null or function, got "+t.success+" ("+typeof t.success+")"),assert(!t.filter||"function"==typeof t.filter,"filter must be null or function, got "+t.filter+" ("+typeof t.filter+")"),assert(!t.transform||"function"==typeof t.transform,"transform must be null or function, got "+t.transform+" ("+typeof t.transform+")"),assert(!t.sort||"function"==typeof t.sort,"sort must be null or function, got "+t.sort+" ("+typeof t.sort+")"),assert(!t.render||"function"==typeof t.render,"render must be null or function, got "+t.render+" ("+typeof t.render+")"),assert(!t.limit||"number"==typeof t.limit,"limit must be null or number, got "+t.limit+" ("+typeof t.limit+")"),assert(!t.apiLimit||"number"==typeof t.apiLimit,"apiLimit must null or number, got "+t.apiLimit+" ("+typeof t.apiLimit+")"),this._state={running:!1,node:null,token:null,paging:null,pool:[]},this._options=t}Instafeed.prototype.run=function(){var e=this;return this._debug("run","options",this._options),this._debug("run","state",this._state),this._state.running?(this._debug("run","already running, skipping"),!1):(this._start(),this._debug("run","getting dom node"),"string"==typeof this._options.target?this._state.node=document.getElementById(this._options.target):this._state.node=this._options.target,this._state.node?(this._debug("run","got dom node",this._state.node),this._debug("run","getting access token"),this._getAccessToken(function(t,o){if(t)return e._debug("onTokenReceived","error",t),void e._fail(new Error("error getting access token: "+t.message));e._debug("onTokenReceived","got token",o),e._state.token=o,e._showNext(function(t){if(t)return e._debug("onNextShown","error",t),void e._fail(t);e._finish()})}),!0):(this._fail(new Error("no element found with ID "+this._options.target)),!1))},Instafeed.prototype.hasNext=function(){var e=this._state.paging,t=this._state.pool;return this._debug("hasNext","paging",e),this._debug("hasNext","pool",t.length,t),t.length>0||e&&"string"==typeof e.next},Instafeed.prototype.next=function(){var e=this;return e.hasNext()?e._state.running?(e._debug("next","already running, skipping"),!1):(e._start(),void e._showNext(function(t){if(t)return e._debug("onNextShown","error",t),void e._fail(t);e._finish()})):(e._debug("next","hasNext is false, skipping"),!1)},Instafeed.prototype._showNext=function(e){var t=this,o=null,n=null,s="number"==typeof this._options.limit;if(t._debug("showNext","pool",t._state.pool.length,t._state.pool),t._state.pool.length>0){if(n=s?t._state.pool.splice(0,t._options.limit):t._state.pool.splice(0),t._debug("showNext","items from pool",n.length,n),t._debug("showNext","updated pool",t._state.pool.length,t._state.pool),t._options.mock)t._debug("showNext","mock enabled, skipping render");else try{t._renderData(n)}catch(i){return void e(i)}e(null)}else t._state.paging&&"string"==typeof t._state.paging.next?o=t._state.paging.next:(o="https://graph.instagram.com/me/media?fields=caption,id,media_type,media_url,permalink,thumbnail_url,timestamp,username&access_token="+t._state.token,t._options.apiLimit||"number"!=typeof t._options.limit?"number"==typeof t._options.apiLimit&&(t._debug("showNext","apiLimit set, overriding limit",t._options.apiLimit,t._options.limit),o=o+"&limit="+t._options.apiLimit):(t._debug("showNext","no apiLimit set, falling back to limit",t._options.apiLimit,t._options.limit),o=o+"&limit="+t._options.limit)),t._debug("showNext","making request",o),t._makeApiRequest(o,function(o,n){var s=null;if(o)return t._debug("onResponseReceived","error",o),void e(new Error("api request error: "+o.message));t._debug("onResponseReceived","data",n),t._success(n),t._debug("onResponseReceived","setting paging",n.paging),t._state.paging=n.paging;try{if(s=t._processData(n),t._debug("onResponseReceived","processed data",s),s.unused&&s.unused.length>0){t._debug("onResponseReceived","saving unused to pool",s.unused.length,s.unused);for(var r=0;r<s.unused.length;r++)t._state.pool.push(s.unused[r])}}catch(a){return void e(a)}if(t._options.mock)t._debug("onResponseReceived","mock enabled, skipping append");else try{t._renderData(s.items)}catch(i){return void e(i)}e(null)})},Instafeed.prototype._processData=function(e){var t="function"==typeof this._options.transform,o="function"==typeof this._options.filter,n="function"==typeof this._options.sort,s="number"==typeof this._options.limit,i=[],r=null,a=null,u=null,l=null,p=null;if(this._debug("processData","hasFilter",o,"hasTransform",t,"hasSort",n,"hasLimit",s),"object"!=typeof e||"object"!=typeof e.data||e.data.length<=0)return null;for(var c=0;c<e.data.length;c++){if(a=this._getItemData(e.data[c]),t)try{u=this._options.transform(a),this._debug("processData","transformed item",a,u)}catch(f){throw this._debug("processData","error calling transform",f),new Error("error in transform: "+f.message)}else u=a;if(o){try{l=this._options.filter(u),this._debug("processData","filter item result",u,l)}catch(f){throw this._debug("processData","error calling filter",f),new Error("error in filter: "+f.message)}l&&i.push(u)}else i.push(u)}if(n)try{i.sort(this._options.sort)}catch(f){throw this._debug("processData","error calling sort",f),new Error("error in sort: "+f.message)}return s&&(r=i.length-this._options.limit,this._debug("processData","checking limit",i.length,this._options.limit,r),r>0&&(p=i.slice(i.length-r),this._debug("processData","unusedItems",p.length,p),i.splice(i.length-r,r))),{items:i,unused:p}},Instafeed.prototype._extractTags=function(e){var t=/#([^\s]+)/gi,o=/[~`!@#$%^&*\(\)\-\+={}\[\]:;"'<>\?,\./|\\\s]+/i,n=[],s=null;if("string"==typeof e)for(;null!==(s=t.exec(e));)!1===o.test(s[1])&&n.push(s[1]);return n},Instafeed.prototype._getItemData=function(e){var t=null,o=null;switch(e.media_type){case"IMAGE":t="image",o=e.media_url;break;case"VIDEO":t="video",o=e.thumbnail_url;break;case"CAROUSEL_ALBUM":t="album",o=e.media_url}return{caption:e.caption,tags:this._extractTags(e.caption),id:e.id,image:o,link:e.permalink,model:e,timestamp:e.timestamp,type:t,username:e.username}},Instafeed.prototype._renderData=function(e){var t="string"==typeof this._options.template,o="function"==typeof this._options.render,n=null,s=null,i=null,r="";if(this._debug("renderData","hasTemplate",t,"hasRender",o),!("object"!=typeof e||e.length<=0)){for(var a=0;a<e.length;a++){if(n=e[a],o)try{s=this._options.render(n,this._options),this._debug("renderData","custom render result",n,s)}catch(u){throw this._debug("renderData","error calling render",u),new Error("error in render: "+u.message)}else t&&(s=this._basicRender(n));s?r+=s:this._debug("renderData","render item did not return any content",n)}for(this._debug("renderData","html content",r),(i=document.createElement("div")).innerHTML=r,this._debug("renderData","container",i,i.childNodes.length,i.childNodes);i.childNodes.length>0;)this._debug("renderData","appending child",i.childNodes[0]),this._state.node.appendChild(i.childNodes[0])}},Instafeed.prototype._basicRender=function(e){for(var t=new RegExp(this._options.templateBoundaries[0]+"([\\s\\w.]+)"+this._options.templateBoundaries[1],"gm"),o=this._options.template,n=null,s="",i=0,r=null,a=null;null!==(n=t.exec(o));)r=n[1],s+=o.slice(i,n.index),(a=this._valueForKeyPath(r,e))&&(s+=a.toString()),i=t.lastIndex;return i<o.length&&(s+=o.slice(i,o.length)),s},Instafeed.prototype._valueForKeyPath=function(e,t){for(var o=/([\w]+)/gm,n=null,s=t;null!==(n=o.exec(e));){if("object"!=typeof s)return null;s=s[n[1]]}return s},Instafeed.prototype._fail=function(e){!this._runHook("error",e)&&console&&"function"==typeof console.error&&console.error(e),this._state.running=!1},Instafeed.prototype._start=function(){this._state.running=!0,this._runHook("before")},Instafeed.prototype._finish=function(){this._runHook("after"),this._state.running=!1},Instafeed.prototype._success=function(e){this._runHook("success",e),this._state.running=!1},Instafeed.prototype._makeApiRequest=function(e,t){var o=!1,n=this,s=null,i=function(e,n){o||(o=!0,t(e,n))};(s=new XMLHttpRequest).ontimeout=function(){i(new Error("api request timed out"))},s.onerror=function(){i(new Error("api connection error"))},s.onload=function(e){var t=s.getResponseHeader("Content-Type"),o=null;if(n._debug("apiRequestOnLoad","loaded",e),n._debug("apiRequestOnLoad","response status",s.status),n._debug("apiRequestOnLoad","response content type",t),t.indexOf("application/json")>=0)try{o=JSON.parse(s.responseText)}catch(r){return n._debug("apiRequestOnLoad","json parsing error",r,s.responseText),void i(new Error("error parsing response json"))}200===s.status?i(null,o):o&&o.error?i(new Error(o.error.code+" "+o.error.message)):i(new Error("status code "+s.status))},s.open("GET",e,!0),s.timeout=this._options.apiTimeout,s.send()},Instafeed.prototype._getAccessToken=function(e){var t=!1,o=this,n=null,s=function(o,s){t||(t=!0,clearTimeout(n),e(o,s))};if("function"==typeof this._options.accessToken){this._debug("getAccessToken","calling accessToken as function"),n=setTimeout(function(){o._debug("getAccessToken","timeout check",t),s(new Error("accessToken timed out"),null)},this._options.accessTokenTimeout);try{this._options.accessToken(function(e,n){o._debug("getAccessToken","received accessToken callback",t,e,n),s(e,n)})}catch(i){this._debug("getAccessToken","error invoking the accessToken as function",i),s(i,null)}}else this._debug("getAccessToken","treating accessToken as static",typeof this._options.accessToken),s(null,this._options.accessToken)},Instafeed.prototype._debug=function(){var e=null;this._options.debug&&console&&"function"==typeof console.log&&((e=[].slice.call(arguments))[0]="[Instafeed] ["+e[0]+"]",console.log.apply(null,e))},Instafeed.prototype._runHook=function(e,t){var o=!1;if("function"==typeof this._options[e])try{this._options[e](t),o=!0}catch(n){this._debug("runHook","error calling hook",e,n)}return o};export default Instafeed;
//# sourceMappingURL=instafeed.es.min.map